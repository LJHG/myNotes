#include<iostream>
using namespace std;

//(3）假设以I和O分别表示入栈和出栈操作。若栈的初态和终态均为空，入栈和出栈的操作序列可表示为仅由I和O组成的序列，则称可以操作的序列为合法序列，否则称为非法序列。
//	1)试指出判别给定序列是否合法的一般规则。
//	2)两个不同的合法序列(对两个具有同样元素的输入序列)能否得到相同的输出元素序列?如能得到，请举例说明。
//	3)写出一个算法，判定所给的操作序列是否合法。若合法，返回1，否则返回0（假定被判定的操作序列已存入一维char型数组ch[]中，操作序列以“\0”为结束符)。
int IO(string str)
{
	int I = 0;
	int O = 0;
	for (int i = 0; str[i] != '\0'; i++)
	{
		if (str[i] == 'I')
			I++;
		if (str[i] == 'O')
			O++;
		if (O > I)
			return 0;
	}
	if (O = I)
		return 1;
	return 0;
}

//(6）假设以带头结点的循环链表表示队列，并且只设一个指针指向队尾结点，但不设头指针，请写出相应的入队列和出队列算法。
